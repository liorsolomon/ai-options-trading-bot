name: Options Trading Bot

on:
  schedule:
    # Run every 3 hours
    - cron: '0 */3 * * *'
  workflow_dispatch:  # Allow manual triggering

jobs:
  trade:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Check database configuration
      env:
        DATABASE_URL: ${{ secrets.DATABASE_URL }}
      run: |
        if [ -z "$DATABASE_URL" ]; then
          echo "ERROR: DATABASE_URL not configured in GitHub Secrets!"
          echo "Please set up a cloud database (Supabase or Neon)"
          echo "See: docs/CLOUD_DATABASE_SETUP.md"
          exit 1
        fi
        if [[ "$DATABASE_URL" == *"sqlite"* ]]; then
          echo "ERROR: SQLite database cannot be used in GitHub Actions!"
          echo "Data will be lost when container restarts."
          echo "Please use PostgreSQL (Supabase or Neon)"
          exit 1
        fi
        echo "âœ… Database configuration valid"
    
    - name: Initialize database
      env:
        DATABASE_URL: ${{ secrets.DATABASE_URL }}
      run: |
        python ai-options-trading-bot/scripts/init_database.py
    
    - name: Run trading bot
      env:
        ALPACA_API_KEY: ${{ secrets.ALPACA_API_KEY }}
        ALPACA_SECRET_KEY: ${{ secrets.ALPACA_SECRET_KEY }}
        CLAUDE_API_KEY: ${{ secrets.CLAUDE_API_KEY }}
        DATABASE_URL: ${{ secrets.DATABASE_URL }}
        NEWS_API_KEY: ${{ secrets.NEWS_API_KEY }}
        POLYGON_API_KEY: ${{ secrets.POLYGON_API_KEY }}
        ALPHA_VANTAGE_API_KEY: ${{ secrets.ALPHA_VANTAGE_API_KEY }}
        TRADING_MODE: paper
        GITHUB_ACTIONS: true
      run: |
        cd ai-options-trading-bot && python -m src.main
    
    - name: Upload logs
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: trading-logs-${{ github.run_number }}
        path: logs/
        retention-days: 30
    
    - name: Send notification on failure
      if: failure()
      run: |
        echo "Trading bot failed. Check logs for details."
        # Add notification service integration here (Slack, email, etc.)